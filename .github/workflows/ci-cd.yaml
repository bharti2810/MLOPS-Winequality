name: Python application # name of application

on: # trigger to run jobs i.e whenever we'll run a push or pull on main branch then only it will run
  push: 
    branches:
    - main-mlflow # branch name
  pull_request:
    branches:
    - main-mlflow # branch name

jobs: # jobs that need to be run
  build:

    runs-on: ubuntu-latest # running on ubuntu

    steps:
    - uses: actions/checkout@v2 # some, we are giving this steps 
      with:
        fetch-depth: 0
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7  # setting up python version
    - name: Install dependencies # this is name given to the job
    # now we are upgrading pip and installing flake for linting then if fi giving bash syntax to check and install req
      run: |
        python -m pip install --upgrade pip 
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest # test with pytest , so whatever we did on local system that will be performed on git
      run: |
        pytest -v
    - name: Deploy to Heroku
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      if: github.ref == 'refs/heads/main' && job.status == 'success'
      run: |
        git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
        git push heroku HEAD:main -f